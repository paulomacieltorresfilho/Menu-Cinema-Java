package View;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

import Controller.MovieController;
import Model.Movie;

public class MovieScreenDetails implements ActionListener{
	private JFrame menu = new JFrame("Detalhes do filme");
	private JLabel lId = new JLabel("Id: ");
	private JTextField id;
	private JLabel lName = new JLabel("Nome: ");
	private JTextField name;
	private JLabel lSynopsis = new JLabel("Sinopse: ");
	private JTextField synopsis;
	private JLabel lGenre = new JLabel("Gênero: ");
	private JTextField genre;
	private JLabel lDuration = new JLabel("Duração: ");
	private JTextField duration;
	private JButton save  = new JButton("Salvar");
	private JButton remove = new JButton("Excluir");
	
	private MovieController filmsDate;
	private ArrayList<Movie> films;
	private int pos;
	
	public MovieScreenDetails(MovieController filmsDate, int pos, MovieScreen ms) {
		
	}
	
	public void showMovie(MovieController filmsDate, int pos, MovieScreen ms) {
		this.pos = pos;
		this.filmsDate = filmsDate;
		films = filmsDate.getFilms();
		Movie film = films.get(pos);
			
		id = new JTextField(String.valueOf(film.getId()));
		name = new JTextField(film.getName());
		synopsis = new JTextField(film.getSynopsis());
		genre = new JTextField(film.getGenre());
		duration = new JTextField(String.valueOf(film.getDuration()));
		
		
		//label
		lId.setBounds(20,10,150,30);
		lName.setBounds(20,40,150,30);
		lSynopsis.setBounds(20,70,150,30);
		lGenre.setBounds(20,100,150,30);
		lDuration.setBounds(20,130,150,30);
		
		menu.add(lId);
		menu.add(lName);
		menu.add(lSynopsis);
		menu.add(lGenre);
		menu.add(lDuration);
		
		//textField
		id.setBounds(100, 10, 150,30);
		name.setBounds(100, 40, 150,30);
		synopsis.setBounds(100, 70, 150,30);
		genre.setBounds(100, 100, 150,30);
		duration.setBounds(100, 130, 150,30);
		
		menu.add(id);
		menu.add(name);
		menu.add(synopsis);
		menu.add(genre);
		menu.add(duration);

		//button
		save.setBounds(70,177,100,30);
		remove.setBounds(200,177,100,30);
		
		menu.add(save);
		menu.add(remove);
		
		//frame
		menu.setLayout(null);
		menu.setSize(400,250);
		menu.setLocation(0, 500);
		menu.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		menu.setVisible(true);
		
		save.addActionListener(this);
		remove.addActionListener(this);
	}


	@Override
	public void actionPerformed(ActionEvent e) {
		Object src = e.getSource();
		
		if(src == save) {
			try {
				Movie m = new Movie(
						Integer.valueOf(id.getText()),
						name.getText(),
						synopsis.getText(),
						genre.getText(),
						Integer.valueOf(duration.getText())
						);
				this.filmsDate.delete(pos);
				this.filmsDate.register(pos, m);
				messageSave();	
				
			} catch (Exception e1) {
				massageErroRegister();
			}
		}
		if(src == remove) {
			this.filmsDate.delete(pos);
			messageRemove();
		}
	}
	
	public void messageRemove() {
		JOptionPane.showMessageDialog(null, "Os dados foram excluidos com sucesso!", "Sucesso", 
				JOptionPane.INFORMATION_MESSAGE);
		menu.dispose();
	}
	public void messageSave() {
		JOptionPane.showMessageDialog(null, "Os dados foram salvos com sucesso!", "Sucesso", 
				JOptionPane.INFORMATION_MESSAGE);
		menu.dispose();
	}
	public void massageErroRegister() {
		JOptionPane.showMessageDialog(null,"ERRO AO SALVAR OS DADOS!\n "
				+ "Pode ter ocorrido um dos dois erros a seguir:  \n"
				+ "1. Nem todos os campos foram preenchidos \n"
				+ "2. id e duração não contém apenas números", "Menssagem de ERRO", 
				JOptionPane.ERROR_MESSAGE);
	}

}
