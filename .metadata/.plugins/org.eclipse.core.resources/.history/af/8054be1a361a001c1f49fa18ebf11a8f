package View;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import Controller.MovieController;
import Controller.SnackController;
import Model.Movie;
import Model.Snack;

public class SnackScreen 
extends ScreenBase
implements ActionListener, ListSelectionListener {
	
	private JList<String> listSnacks;
	static String[] snacksName = new String[1000];
	
	private static SnackController snackDate;
	ArrayList<Snack> snacks;
	
	
	public SnackScreen(SnackController snackDate) {
		super(snacksName);
		SnackScreen.snackDate = snackDate;
		snacks = snackDate.getSnacks();
		snacksName = snackDate.view(snacksName);
		
		menu.setTitle("Lanches");
		title.setText("Lista de Lanches");
		
		list.setListDate(snacksName);
		
		btAdd.addActionListener(this);
		btAtt.addActionListener(this);
		listSnacks.addListSelectionListener(this);
	}

	@Override
	public void valueChanged(ListSelectionEvent e) {
		Object src = e.getSource();
		
		if(e.getValueIsAdjusting()&& src == listSnacks) {
			new MovieScreenDetails().showMovie(snackDate, listSnacks.getSelectedIndex(), this);
		}
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		Object src = e.getSource();

		if(src == btAdd) {
			Snack s = new Snack(null, 0, 0);
			int pos = snacks.size();
			snacks.add(pos, s);
			snackDate.update(snacks);
			
			new MovieScreenDetails().showMovie(snackDate, pos, this);
		}
		if(src == btAtt) {
			snacks = snackDate.getSnacks();
			snacksName = new String[1000];
			for(int i = 0; i < snacks.size(); i++) {
				Snack aux;
				
				aux = snacks.get(i);
				snacksName[i] = aux.getName();
			}
			listSnacks.setListData(snacksName);

		}
	}
}